■メモ
react JavaScriptライブラリ　component base
hooks クラスを使わずに関数ないで処理を行うことができる
state コンポーネントが持つ可変のdata, useState関数
useEffect 副作用の処理を関数コンポーネントで扱える
npm/yarn パッケージマネージャー
yarn yarn.lockでバージョン管理、バージョン違いの依存プログラムのインストールを防げる
context コンポーネントツリー内でデータを渡す方法を提供、プロパティを直接渡せる
provider
router UIとURLを対応づけるためのライブラリ
component 見た目+機能
class component state, props(this), render return jsx
functional component stateless, props, return jsx
props UIの状態や情報を管理、値の受け渡し
map 配列の要素を順に取り出す
recharts グラフのライブラリ
default export import側で自由に名前をつけることができる
named export import側の名前も固定
import
export 作成したコンポーネントを他のファイルから呼び出せる
customhooks useXXXで使用できる
hooks
スプレッド構文で追加 setXXX([...fruits, 'banana'])
filterで削除 setXXX(xXX.filter((fruits, index) => (fruit !== 'banana')))

■ディレクトリ構造
コードはsrc配下
機能をまたいで使うcomponent(シンプルなボタンなど)はsrc/components配下
providersやroutesはディレクトリを切って管理

■「都道府県一覧API」を取得
・urlとAPI-keyを使用し取得→完了
axios api通信を楽に

■チェックボックスを動的に生成
・「都道府県一覧API」から取得した情報でformのチェックボックスを生成→完了
・uniqueキーを指定→完了(id, name)

■チェックを入れると「人口構成API」を取得
・チェックボックスにイベントを追加
onChange
チェックボックス生成時にonClickでメソッドを設定しておく→完了

・unique-keyをもとに対象の都道府県の「人口構成API」にsubmit
クエリパラメータで設定?prefCode=""
useState

■「人口構成API」から折れ線グラフを動的に生成
・「人口構成API」から情報を取得
・画面に表示
・チェックボックスを解除したらグラフを削除
・チェックボックスで取得したものを配列に格納→解除したら削除
・Recharts
・「人口構成API」に都道府県の名前が含まれないので、「都道府県一覧API」から持ち回る必要あり
propsで受け渡し
・チェックボックスにチェック→関数でAPIを動かす→グラフに反映
onChangeでチェックボックスからidを取得
listに追加していく?ある状態でチェックだとグラフから削除
10個までしか同時呼び出しはできない
stateが変わるたびに人口構成の方は呼び出すので第二引数を指定
どこかに格納→もう一度押されたら削除
どこかのクラスでAPI部分を切り出し(クラスかコンポーネント)